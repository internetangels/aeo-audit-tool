
from reportlab.platypus import SimpleDocTemplate, Paragraph, Table, TableStyle, Spacer, Image
from reportlab.lib.pagesizes import A4
from reportlab.lib.styles import getSampleStyleSheet, ParagraphStyle
from reportlab.lib import colors
from io import BytesIO
import os

def generate_polished_pdf_report(audit_data, output_path, logo_path=None, contact_email="carmine@internetangels.com.au"):
    buffer = BytesIO()
    doc = SimpleDocTemplate(buffer, pagesize=A4, rightMargin=30, leftMargin=30, topMargin=30, bottomMargin=18)
    styles = getSampleStyleSheet()
    custom_title = ParagraphStyle(name="TitleStyle", fontSize=20, spaceAfter=20, alignment=1, textColor=colors.HexColor("#1A73E8"))
    custom_footer = ParagraphStyle(name="FooterStyle", fontSize=10, alignment=1, textColor=colors.grey)
    cell_style = ParagraphStyle(name="CellStyle", fontSize=9, leading=11)

    elements = []

    if logo_path and os.path.exists(logo_path):
        elements.append(Image(logo_path, width=400, height=60))
        elements.append(Spacer(1, 12))

    elements.append(Paragraph("AI SEO Compliance Report", custom_title))
    elements.append(Spacer(1, 12))

    # Build audit results table
    data = [["Audit Area", "Score", "Result", "Recommendation"]]
    for area, (icon, result, recommendation) in audit_data.items():
        row = [
            Paragraph(area, cell_style),
            Paragraph(icon, cell_style),
            Paragraph(result, cell_style),
            Paragraph(recommendation, cell_style)
        ]
        data.append(row)

    table = Table(data, colWidths=[110, 40, 160, 170])
    table.setStyle(TableStyle([
        ("BACKGROUND", (0, 0), (-1, 0), colors.HexColor("#1A73E8")),
        ("TEXTCOLOR", (0, 0), (-1, 0), colors.whitesmoke),
        ("ALIGN", (0, 0), (-1, -1), "LEFT"),
        ("FONTNAME", (0, 0), (-1, 0), "Helvetica-Bold"),
        ("FONTSIZE", (0, 0), (-1, 0), 10),
        ("BOTTOMPADDING", (0, 0), (-1, 0), 10),
        ("BACKGROUND", (0, 1), (-1, -1), colors.whitesmoke),
        ("GRID", (0, 0), (-1, -1), 0.25, colors.grey),
        ("VALIGN", (0, 0), (-1, -1), "TOP"),
    ]))
    elements.append(table)
    elements.append(Spacer(1, 24))

    # Summary and CTA
    summary_text = """
    <b>Summary:</b> Site shows promise but needs clearer content and support features for AI readiness.<br/><br/>
    <b>Next Steps:</b> Internet Angels can fully optimise your site for visibility in AI search tools.
    """
    elements.append(Paragraph(summary_text, styles["BodyText"]))
    elements.append(Spacer(1, 18))

    cta = Paragraph(f"ðŸ’¡ <b>Need help optimising for AI Search?</b> Contact <b>Internet Angels</b> at <a href='mailto:{contact_email}'>{contact_email}</a>.", styles["BodyText"])
    elements.append(cta)
    elements.append(Spacer(1, 24))

    footer = Paragraph("Generated by ReviewMate AEO Audit Tool", custom_footer)
    elements.append(footer)

    doc.build(elements)
    buffer.seek(0)

    with open(output_path, "wb") as f:
        f.write(buffer.read())

    return output_path
